// Mocks generated by Mockito 5.2.0 from annotations
// in sub_bagussh/test/presentation/provider/tvclil/tvclil_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sub_bagussh/common/failure.dart' as _i6;
import 'package:sub_bagussh/domain/entities/tvclil/tvclil.dart' as _i9;
import 'package:sub_bagussh/domain/entities/tvclil/tvclil_detail.dart' as _i7;
import 'package:sub_bagussh/domain/repositories/tvclil_repository.dart' as _i2;
import 'package:sub_bagussh/domain/usecases/tvclil/get_tvclil_detail.dart'
    as _i4;
import 'package:sub_bagussh/domain/usecases/tvclil/get_tvclil_recomendations.dart'
    as _i8;
import 'package:sub_bagussh/domain/usecases/tvclil/get_watchlist_status_tvclil.dart'
    as _i10;
import 'package:sub_bagussh/domain/usecases/tvclil/remove_watchlist_tvclil.dart'
    as _i12;
import 'package:sub_bagussh/domain/usecases/tvclil/save_watchlist_tvclil.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvclilRepository_0 extends _i1.Fake implements _i2.TvclilRepository {
}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetTvclilDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvclilDetail extends _i1.Mock implements _i4.GetTvclilDetail {
  MockGetTvclilDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvclilRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvclilRepository_0()) as _i2.TvclilRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvclilDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.TvclilDetail>>.value(
              _FakeEither_1<_i6.Failure, _i7.TvclilDetail>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.TvclilDetail>>);
}

/// A class which mocks [GetTvclilRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvclilRecommendations extends _i1.Mock
    implements _i8.GetTvclilRecommendations {
  MockGetTvclilRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvclilRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvclilRepository_0()) as _i2.TvclilRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tvclil>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i9.Tvclil>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Tvclil>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Tvclil>>>);
}

/// A class which mocks [GetWatchListStatusTvclil].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTvclil extends _i1.Mock
    implements _i10.GetWatchListStatusTvclil {
  MockGetWatchListStatusTvclil() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvclilRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvclilRepository_0()) as _i2.TvclilRepository);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [SaveWatchlistTvclil].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvclil extends _i1.Mock
    implements _i11.SaveWatchlistTvclil {
  MockSaveWatchlistTvclil() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvclilRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvclilRepository_0()) as _i2.TvclilRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.TvclilDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTvclil].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvclil extends _i1.Mock
    implements _i12.RemoveWatchlistTvclil {
  MockRemoveWatchlistTvclil() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvclilRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvclilRepository_0()) as _i2.TvclilRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.TvclilDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
